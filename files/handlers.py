import g4f
import asyncio

from aiogram import F, Router
from aiogram.filters import CommandStart, Command, StateFilter
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from settings.settings import ai_token

import files.keyboards as kb
from files import database as db

# class Form(StatesGroup):

router = Router()

@router.message(StateFilter(None), CommandStart())
async def cmd_start(message: Message):
    user_id = message.from_user.id
    db.cur.execute("INSERT OR IGNORE INTO users (user_id, limit_request, lang) VALUES (?, ?, ?)", (user_id, 5, None))
    db.db.commit()
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç!\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è\n\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø–æ–º–æ—â–∏, –Ω–∞–∂–º–∏—Ç–µ '‚ùì –ü–æ–º–æ—â—å'", reply_markup=kb.start)


@router.callback_query() 
async def process_callback(callback_query: CallbackQuery, state: FSMContext): 
    data = callback_query.data

    if data == "learnlang":
        await callback_query.bot.delete_message(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id)
        await callback_query.message.answer("üìï –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ.", reply_markup=kb.learn)

    if data == "ret":
        await callback_query.message.answer("üëã –ü—Ä–∏–≤–µ—Ç!\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è\n\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø–æ–º–æ—â–∏, –Ω–∞–∂–º–∏—Ç–µ '‚ùì –ü–æ–º–æ—â—å'", reply_markup=kb.start)

    if data == "py":
        response = g4f.ChatCompletion.create(
            model="gpt-3.5-turbo",
            temperature=0.3,
            # max_tokens=1000,
            top_p=1.0,
            frequency_penalty=0.0,
            presence_penalty=0.6,
            stop=None,
            messages=[
                {"role": "user", "content": (
                    "–ü—Ä–∏–≤–µ—Ç ChatGPT! –î–∞–π –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –º–Ω–µ —Å—Ä–µ–¥–Ω—é—é, –Ω–µ —Å–ª–æ–∂–Ω—É—é –∑–∞–¥–∞—á—É –ø–æ —è–∑—ã–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Python –∏ –¥–∞–π —Å–æ–≤–µ—Ç –ø–æ —Ä–µ—à–µ–Ω–∏—é —ç—Ç–æ–π –∑–∞–¥–∞—á–∏.",
                    "–¢—ã –≤—Å–µ–≥–¥–∞ –≤—ã–¥–∞–µ—à—å —Ä–∞–∑–Ω—ã–µ –∑–∞–¥–∞—á–∏",
                    "–¢—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ –≤ —Å–≤–æ–µ–º –æ—Ç–≤–µ—Ç–µ.",
                    "–¢—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å —Å–º–∞–π–ª–∏–∫–∏ –≤ —Å–≤–æ–µ–º –æ—Ç–≤–µ—Ç–µ.",
                    "–¢—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–∞–µ—à—å –∫–æ–¥ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –∑–∞–¥–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.",
                    "–¢—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ—è—Å–Ω—è–µ—à—å –∫–æ–¥ –∑–∞–¥–∞—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.",
                    "–¢—ã –≤—Å–µ–≥–¥–∞ –≥–æ–≤–æ—Ä–∏—à—å –≤ –∫–æ–Ω—Ü–µ: –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω—ã –µ—â–µ –∑–∞–¥–∞—á–∏, –¥–∞–π –º–Ω–µ –æ–± —ç—Ç–æ–º –∑–Ω–∞—Ç—å!")
                }
            ],
            stream=True
        )
        language = db.cur.execute("SELECT lang FROM users WHERE user_id = {}".format(callback_query.from_user.id)).fetchone()[0]
        if language == None:
            await callback_query.bot.edit_message_text(
                text="‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ —è–∑—ã–∫ <b>üêç Python</b> –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π\n\n–ù–∞–∂–º–∏—Ç–µ '–ù–∞–∑–∞–¥', —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é.",
                chat_id=callback_query.message.chat.id,
                message_id=callback_query.message.message_id,
                parse_mode="HTML",
                reply_markup=kb.inlearn
            )
            db.cur.execute("UPDATE users SET lang = ? WHERE user_id = ?", ("Python", callback_query.from_user.id))
            db.db.commit()
        else:
            await callback_query.bot.delete_message(chat_id=callback_query.message.chat.id,message_id=callback_query.message.message_id)
            await callback_query.message.answer("–í–∞—à–∞ –∑–∞–¥–∞—á–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
            response_text = ""
            for chunk in response:
                response_text += chunk
                await asyncio.sleep(3)
                await callback_query.message.answer(response_text, parse_mode="Markdown", reply_markup=kb.inlearn)
                return

    if data == "js":
        response = g4f.ChatCompletion.create(
            model="gpt-3.5-turbo",
            temperature=0.3,
            # max_tokens=1000,
            top_p=1.0,
            frequency_penalty=0.0,
            presence_penalty=0.6,
            stop=None,
            messages=[
                {"role": "user", "content": (
                    "–ü—Ä–∏–≤–µ—Ç ChatGPT! –î–∞–π –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –º–Ω–µ —Å—Ä–µ–¥–Ω—é—é, –Ω–µ —Å–ª–æ–∂–Ω—É—é –∑–∞–¥–∞—á—É –ø–æ —è–∑—ã–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è JavaScript –∏ –¥–∞–π —Å–æ–≤–µ—Ç –ø–æ —Ä–µ—à–µ–Ω–∏—é —ç—Ç–æ–π –∑–∞–¥–∞—á–∏.",
                    "–¢—ã –≤—Å–µ–≥–¥–∞ –≤—ã–¥–∞–µ—à—å —Ä–∞–∑–Ω—ã–µ –∑–∞–¥–∞—á–∏",
                    "–¢—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ –≤ —Å–≤–æ–µ–º –æ—Ç–≤–µ—Ç–µ.",
                    "–¢—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å —Å–º–∞–π–ª–∏–∫–∏ –≤ —Å–≤–æ–µ–º –æ—Ç–≤–µ—Ç–µ.",
                    "–¢—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–∞–µ—à—å –∫–æ–¥ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –∑–∞–¥–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.",
                    "–¢—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ—è—Å–Ω—è–µ—à—å –∫–æ–¥ –∑–∞–¥–∞—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.",
                    "–¢—ã –≤—Å–µ–≥–¥–∞ –≥–æ–≤–æ—Ä–∏—à—å –≤ –∫–æ–Ω—Ü–µ: –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω—ã –µ—â–µ –∑–∞–¥–∞—á–∏, –¥–∞–π –º–Ω–µ –æ–± —ç—Ç–æ–º –∑–Ω–∞—Ç—å!")
                }
            ],
            stream=True
        )
        language = db.cur.execute("SELECT lang FROM users WHERE user_id = {}".format(callback_query.from_user.id)).fetchone()[0]
        if language == None:
            await callback_query.bot.edit_message_text(
                text="‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ —è–∑—ã–∫ <b>üü® JavaScript</b> –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π\n\n–ù–∞–∂–º–∏—Ç–µ '–ù–∞–∑–∞–¥', —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é.",
                chat_id=callback_query.message.chat.id,
                message_id=callback_query.message.message_id,
                parse_mode="HTML",
                reply_markup=kb.inlearn
            )
            db.cur.execute("UPDATE users SET lang = ? WHERE user_id = ?", ("JavaScript", callback_query.from_user.id))
            db.db.commit()
        else:
            await callback_query.bot.delete_message(chat_id=callback_query.message.chat.id,message_id=callback_query.message.message_id)
            await callback_query.message.answer("–í–∞—à–∞ –∑–∞–¥–∞—á–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
            response_text = ""
            for chunk in response:
                response_text += chunk
                await asyncio.sleep(3)
                await callback_query.message.answer(response_text, parse_mode="Markdown", reply_markup=kb.inlearn)
                return

    if data == "java":
        response = g4f.ChatCompletion.create(
            model="gpt-3.5-turbo",
            temperature=0.3,
            # max_tokens=1000,
            top_p=1.0,
            frequency_penalty=0.0,
            presence_penalty=0.6,
            stop=None,
            messages=[
                {"role": "user", "content": (
                    "–ü—Ä–∏–≤–µ—Ç ChatGPT! –î–∞–π –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –º–Ω–µ —Å—Ä–µ–¥–Ω—é—é, –Ω–µ —Å–ª–æ–∂–Ω—É—é –∑–∞–¥–∞—á—É –ø–æ —è–∑—ã–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Java –∏ –¥–∞–π —Å–æ–≤–µ—Ç –ø–æ —Ä–µ—à–µ–Ω–∏—é —ç—Ç–æ–π –∑–∞–¥–∞—á–∏.",
                    "–¢—ã –≤—Å–µ–≥–¥–∞ –≤—ã–¥–∞–µ—à—å —Ä–∞–∑–Ω—ã–µ –∑–∞–¥–∞—á–∏",
                    "–¢—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ –≤ —Å–≤–æ–µ–º –æ—Ç–≤–µ—Ç–µ.",
                    "–¢—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å —Å–º–∞–π–ª–∏–∫–∏ –≤ —Å–≤–æ–µ–º –æ—Ç–≤–µ—Ç–µ.",
                    "–¢—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–∞–µ—à—å –∫–æ–¥ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –∑–∞–¥–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.",
                    "–¢—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ—è—Å–Ω—è–µ—à—å –∫–æ–¥ –∑–∞–¥–∞—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.",
                    "–¢—ã –≤—Å–µ–≥–¥–∞ –≥–æ–≤–æ—Ä–∏—à—å –≤ –∫–æ–Ω—Ü–µ: –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω—ã –µ—â–µ –∑–∞–¥–∞—á–∏, –¥–∞–π –º–Ω–µ –æ–± —ç—Ç–æ–º –∑–Ω–∞—Ç—å!")
                }
            ],
            stream=True
        )
        language = db.cur.execute("SELECT lang FROM users WHERE user_id = {}".format(callback_query.from_user.id)).fetchone()[0]
        if language == None:
            await callback_query.bot.edit_message_text(
                text="‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ —è–∑—ã–∫ <b>‚òï Java</b> –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π\n\n–ù–∞–∂–º–∏—Ç–µ '–ù–∞–∑–∞–¥', —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é.",
                chat_id=callback_query.message.chat.id,
                message_id=callback_query.message.message_id,
                parse_mode="HTML",
                reply_markup=kb.inlearn
            )
            db.cur.execute("UPDATE users SET lang = ? WHERE user_id = ?", ("Java", callback_query.from_user.id))
            db.db.commit()
        else:
            await callback_query.bot.delete_message(chat_id=callback_query.message.chat.id,message_id=callback_query.message.message_id)
            await callback_query.message.answer("–í–∞—à–∞ –∑–∞–¥–∞—á–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
            response_text = ""
            for chunk in response:
                response_text += chunk
                await asyncio.sleep(3)
                await callback_query.message.answer(response_text, parse_mode="Markdown", reply_markup=kb.inlearn)
                return

    if data == "cs":
        response = g4f.ChatCompletion.create(
            model="gpt-3.5-turbo",
            temperature=0.3,
            # max_tokens=1000,
            top_p=1.0,
            frequency_penalty=0.0,
            presence_penalty=0.6,
            stop=None,
            messages=[
                {"role": "user", "content": (
                    "–ü—Ä–∏–≤–µ—Ç ChatGPT! –î–∞–π –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –º–Ω–µ —Å—Ä–µ–¥–Ω—é—é, –Ω–µ —Å–ª–æ–∂–Ω—É—é –∑–∞–¥–∞—á—É –ø–æ —è–∑—ã–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è C# –∏ –¥–∞–π —Å–æ–≤–µ—Ç –ø–æ —Ä–µ—à–µ–Ω–∏—é —ç—Ç–æ–π –∑–∞–¥–∞—á–∏.",
                    "–¢—ã –≤—Å–µ–≥–¥–∞ –≤—ã–¥–∞–µ—à—å —Ä–∞–∑–Ω—ã–µ –∑–∞–¥–∞—á–∏",
                    "–¢—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ –≤ —Å–≤–æ–µ–º –æ—Ç–≤–µ—Ç–µ.",
                    "–¢—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å —Å–º–∞–π–ª–∏–∫–∏ –≤ —Å–≤–æ–µ–º –æ—Ç–≤–µ—Ç–µ.",
                    "–¢—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–∞–µ—à—å –∫–æ–¥ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –∑–∞–¥–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.",
                    "–¢—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ—è—Å–Ω—è–µ—à—å –∫–æ–¥ –∑–∞–¥–∞—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.",
                    "–¢—ã –≤—Å–µ–≥–¥–∞ –≥–æ–≤–æ—Ä–∏—à—å –≤ –∫–æ–Ω—Ü–µ: –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω—ã –µ—â–µ –∑–∞–¥–∞—á–∏, –¥–∞–π –º–Ω–µ –æ–± —ç—Ç–æ–º –∑–Ω–∞—Ç—å!")
                }
            ],
            stream=True
        )
        language = db.cur.execute("SELECT lang FROM users WHERE user_id = {}".format(callback_query.from_user.id)).fetchone()[0]
        if language == None:
            await callback_query.bot.edit_message_text(
                text="‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ —è–∑—ã–∫ <b>#Ô∏è‚É£ C#</b> –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π\n\n–ù–∞–∂–º–∏—Ç–µ '–ù–∞–∑–∞–¥', —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é.",
                chat_id=callback_query.message.chat.id,
                message_id=callback_query.message.message_id,
                parse_mode="HTML",
                reply_markup=kb.inlearn
            )
            db.cur.execute("UPDATE users SET lang = ? WHERE user_id = ?", ("C#", callback_query.from_user.id))
            db.db.commit()
        else:
            await callback_query.bot.delete_message(chat_id=callback_query.message.chat.id,message_id=callback_query.message.message_id)
            await callback_query.message.answer("–í–∞—à–∞ –∑–∞–¥–∞—á–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
            response_text = ""
            for chunk in response:
                response_text += chunk
                await asyncio.sleep(3)
                await callback_query.message.answer(response_text, parse_mode="Markdown", reply_markup=kb.inlearn)
                return

    if data == "cpp":
        response = g4f.ChatCompletion.create(
            model="gpt-3.5-turbo",
            temperature=0.3,
            # max_tokens=1000,
            top_p=1.0,
            frequency_penalty=0.0,
            presence_penalty=0.6,
            stop=None,
            messages=[
                {"role": "user", "content": (
                    "–ü—Ä–∏–≤–µ—Ç ChatGPT! –î–∞–π –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –º–Ω–µ —Å—Ä–µ–¥–Ω—é—é, –Ω–µ —Å–ª–æ–∂–Ω—É—é –∑–∞–¥–∞—á—É –ø–æ —è–∑—ã–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è C++ –∏ –¥–∞–π —Å–æ–≤–µ—Ç –ø–æ —Ä–µ—à–µ–Ω–∏—é —ç—Ç–æ–π –∑–∞–¥–∞—á–∏.",
                    "–¢—ã –≤—Å–µ–≥–¥–∞ –≤—ã–¥–∞–µ—à—å —Ä–∞–∑–Ω—ã–µ –∑–∞–¥–∞—á–∏",
                    "–¢—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ –≤ —Å–≤–æ–µ–º –æ—Ç–≤–µ—Ç–µ.",
                    "–¢—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å —Å–º–∞–π–ª–∏–∫–∏ –≤ —Å–≤–æ–µ–º –æ—Ç–≤–µ—Ç–µ.",
                    "–¢—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–∞–µ—à—å –∫–æ–¥ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –∑–∞–¥–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.",
                    "–¢—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ—è—Å–Ω—è–µ—à—å –∫–æ–¥ –∑–∞–¥–∞—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.",
                    "–¢—ã –≤—Å–µ–≥–¥–∞ –≥–æ–≤–æ—Ä–∏—à—å –≤ –∫–æ–Ω—Ü–µ: –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω—ã –µ—â–µ –∑–∞–¥–∞—á–∏, –¥–∞–π –º–Ω–µ –æ–± —ç—Ç–æ–º –∑–Ω–∞—Ç—å!")
                }
            ],
            stream=True
        )
        language = db.cur.execute("SELECT lang FROM users WHERE user_id = {}".format(callback_query.from_user.id)).fetchone()[0]
        if language == None:
            await callback_query.bot.edit_message_text(
                text="‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ —è–∑—ã–∫ <b>‚ûï C++</b> –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π\n\n–ù–∞–∂–º–∏—Ç–µ '–ù–∞–∑–∞–¥', —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é.",
                chat_id=callback_query.message.chat.id,
                message_id=callback_query.message.message_id,
                parse_mode="HTML",
                reply_markup=kb.inlearn
            )
            db.cur.execute("UPDATE users SET lang = ? WHERE user_id = ?", ("C++", callback_query.from_user.id))
            db.db.commit()
        else:
            await callback_query.bot.delete_message(chat_id=callback_query.message.chat.id,message_id=callback_query.message.message_id)
            await callback_query.message.answer("–í–∞—à–∞ –∑–∞–¥–∞—á–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
            response_text = ""
            for chunk in response:
                response_text += chunk
                await asyncio.sleep(3)
                await callback_query.message.answer(response_text, parse_mode="Markdown", reply_markup=kb.inlearn)
                return